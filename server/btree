#!/usr/bin/env python

import os
import sys
import struct
import daemon

sys.path.append("..")
sys.path.append(os.path.join(sys.path[0], '..'))

from storage.bdb import BTree

from twisted.internet import reactor, protocol, defer, task

from memcache import binary, constants

class SimpleBinaryServer(binary.BinaryServerProtocol):
    storage = BTree('/Users/stingleff/src/seattle-salmon/tmp')

    handlers = {
        constants.CMD_GET: storage.doGet,
        constants.CMD_SET: storage.doSet,
        constants.CMD_DELETE: storage.doDelete,
        constants.CMD_QUIT: storage.doQuit
    }

class SeattleSalmon(daemon.Daemon):
    default_conf = '/etc/seattle-salmon.conf'
    default_port = 8089
    section = 'daemon'

    def run(self):
        factory = protocol.Factory()
        factory.protocol = SimpleBinaryServer

        port = int(self.get_option(self.section, 'port', default=self.default_port))
        reactor.listenTCP(port, factory)
        reactor.run()

if __name__ == '__main__':
    ss = SeattleSalmon()
    ss.parse_options()
    #ss.main()
    ss.read_basic_config()
    ss.run()

